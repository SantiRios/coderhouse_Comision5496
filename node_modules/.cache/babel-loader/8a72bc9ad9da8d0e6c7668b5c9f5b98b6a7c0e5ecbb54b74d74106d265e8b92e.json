{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rioss\\\\Desktop\\\\Comision54965\\\\proyecto-final\\\\src\\\\pages\\\\Cart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { CartContext } from '../context/CartContext';\nimport { collection, getDoc, doc, getFirestore } from 'firebase/firestore';\nimport Item from '../components/Item';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchProds = async ids => {\n  const db = getFirestore();\n  const productRefs = ids.map(id => doc(collection(db, \"products\"), id));\n  const productSnap = await Promise.all(productRefs.map(productRef => getDoc(productRef)));\n  const products = productSnap.map(productSnap => {\n    if (productSnap.exists()) {\n      return {\n        id: productSnap.id,\n        ...productSnap.data()\n      };\n    } else {\n      return null;\n    }\n  });\n  return products.filter(product => product !== null);\n};\nconst Cart = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [err, setError] = useState(false);\n  const [productsData, setProductsData] = useState([]);\n  const {\n    count\n  } = useContext(CartContext);\n  useEffect(() => {\n    const ids = count.products.map(p => p.productId);\n    fetchProds(ids).then(res => {\n      setProductsData(res);\n    }).catch(err => setError(err)).then(() => setLoading(false));\n  }, [count]);\n  console.log(productsData);\n  return loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 22\n  }, this) : /*#__PURE__*/_jsxDEV(Item, {\n    productsData: productsData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Cart, \"51niCUrA8rcsrxYe7dMtgg2fCSQ=\");\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useContext","useEffect","useState","CartContext","collection","getDoc","doc","getFirestore","Item","jsxDEV","_jsxDEV","fetchProds","ids","db","productRefs","map","id","productSnap","Promise","all","productRef","products","exists","data","filter","product","Cart","_s","loading","setLoading","err","setError","productsData","setProductsData","count","p","productId","then","res","catch","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rioss/Desktop/Comision54965/proyecto-final/src/pages/Cart.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport { CartContext } from '../context/CartContext'\r\nimport { collection, getDoc, doc, getFirestore } from 'firebase/firestore'\r\nimport Item from '../components/Item';\r\n\r\nconst fetchProds = async (ids) => {\r\n    const db = getFirestore();\r\n    const productRefs = ids.map((id) => doc(collection(db, \"products\"), id));\r\n\r\n    const productSnap = await Promise.all(\r\n        productRefs.map((productRef) => getDoc(productRef))\r\n    );\r\n\r\n    const products = productSnap.map((productSnap)=>{\r\n        if(productSnap.exists()){\r\n            return {id: productSnap.id, ...productSnap.data()};\r\n        }else{\r\n            return null;\r\n        }\r\n    });\r\n    return products.filter((product) => product !== null);\r\n};\r\n\r\nconst Cart = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [err, setError] = useState(false);\r\n    const [productsData, setProductsData] = useState([])\r\n\r\n    const {count} = useContext(CartContext);\r\n    \r\n    useEffect(()=> {\r\n        const ids = count.products.map((p)=> p.productId);\r\n        fetchProds(ids)\r\n        .then((res)=>{\r\n            setProductsData(res)\r\n        })\r\n        .catch((err)=> setError(err))\r\n        .then(()=>setLoading(false));\r\n        }, [count]);\r\n        console.log(productsData);\r\n    return loading? (<div>Loading ...</div>) : (\r\n        <Item productsData={productsData}/>\r\n    )\r\n}\r\nexport default Cart"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,YAAY,QAAQ,oBAAoB;AAC1E,OAAOC,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,UAAU,GAAG,MAAOC,GAAG,IAAK;EAC9B,MAAMC,EAAE,GAAGN,YAAY,CAAC,CAAC;EACzB,MAAMO,WAAW,GAAGF,GAAG,CAACG,GAAG,CAAEC,EAAE,IAAKV,GAAG,CAACF,UAAU,CAACS,EAAE,EAAE,UAAU,CAAC,EAAEG,EAAE,CAAC,CAAC;EAExE,MAAMC,WAAW,GAAG,MAAMC,OAAO,CAACC,GAAG,CACjCL,WAAW,CAACC,GAAG,CAAEK,UAAU,IAAKf,MAAM,CAACe,UAAU,CAAC,CACtD,CAAC;EAED,MAAMC,QAAQ,GAAGJ,WAAW,CAACF,GAAG,CAAEE,WAAW,IAAG;IAC5C,IAAGA,WAAW,CAACK,MAAM,CAAC,CAAC,EAAC;MACpB,OAAO;QAACN,EAAE,EAAEC,WAAW,CAACD,EAAE;QAAE,GAAGC,WAAW,CAACM,IAAI,CAAC;MAAC,CAAC;IACtD,CAAC,MAAI;MACD,OAAO,IAAI;IACf;EACJ,CAAC,CAAC;EACF,OAAOF,QAAQ,CAACG,MAAM,CAAEC,OAAO,IAAKA,OAAO,KAAK,IAAI,CAAC;AACzD,CAAC;AAED,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC4B,GAAG,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAAC8B,YAAY,EAAEC,eAAe,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAM;IAACgC;EAAK,CAAC,GAAGlC,UAAU,CAACG,WAAW,CAAC;EAEvCF,SAAS,CAAC,MAAK;IACX,MAAMW,GAAG,GAAGsB,KAAK,CAACb,QAAQ,CAACN,GAAG,CAAEoB,CAAC,IAAIA,CAAC,CAACC,SAAS,CAAC;IACjDzB,UAAU,CAACC,GAAG,CAAC,CACdyB,IAAI,CAAEC,GAAG,IAAG;MACTL,eAAe,CAACK,GAAG,CAAC;IACxB,CAAC,CAAC,CACDC,KAAK,CAAET,GAAG,IAAIC,QAAQ,CAACD,GAAG,CAAC,CAAC,CAC5BO,IAAI,CAAC,MAAIR,UAAU,CAAC,KAAK,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACK,KAAK,CAAC,CAAC;EACXM,OAAO,CAACC,GAAG,CAACT,YAAY,CAAC;EAC7B,OAAOJ,OAAO,gBAAGlB,OAAA;IAAAgC,QAAA,EAAK;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,gBACnCpC,OAAA,CAACF,IAAI;IAACwB,YAAY,EAAEA;EAAa;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CACrC;AACL,CAAC;AAAAnB,EAAA,CApBKD,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AAqBV,eAAeA,IAAI;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}